/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ExamBoardWhereUniqueInput } from "../../examBoard/base/ExamBoardWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { TopicWhereUniqueInput } from "../../topic/base/TopicWhereUniqueInput";
import { UserPerformanceListRelationFilter } from "../../userPerformance/base/UserPerformanceListRelationFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";

@InputType()
class QuestionWhereInput {
  @ApiProperty({
    required: false,
    type: () => ExamBoardWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExamBoardWhereUniqueInput)
  @IsOptional()
  @Field(() => ExamBoardWhereUniqueInput, {
    nullable: true,
  })
  examBoard?: ExamBoardWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  text?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TopicWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TopicWhereUniqueInput)
  @IsOptional()
  @Field(() => TopicWhereUniqueInput, {
    nullable: true,
  })
  topic?: TopicWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserPerformanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserPerformanceListRelationFilter)
  @IsOptional()
  @Field(() => UserPerformanceListRelationFilter, {
    nullable: true,
  })
  userPerformances?: UserPerformanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  year?: IntNullableFilter;
}

export { QuestionWhereInput as QuestionWhereInput };
